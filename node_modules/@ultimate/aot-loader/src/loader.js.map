{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../src/loader.ts"],"names":[],"mappings":"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","sourcesContent":["import { dirname, join, normalize, relative, resolve } from 'path';\nimport { SourceFile } from 'typescript';\n\nimport { AotPlugin } from './plugin';\nimport { TransformFile } from './transform/file';\n\nexport async function aotLoader(source: string, map: string) {\n  this.cacheable();\n  const callback = this.async();\n\n  const aotPlugin = (this._compilation.aotPlugin as AotPlugin);\n\n  try {\n    await aotPlugin.compilePromise;\n  } catch (err) {\n    return callback(null, '');\n  }\n\n  let sourceFile: SourceFile;\n  if (aotPlugin.sourceFileCache.has(this.resourcePath)) {\n    sourceFile = aotPlugin.sourceFileCache.get(this.resourcePath);\n  }\n\n  const isGenerated = /\\.(ngfactory|ngstyle)(\\.|$)/.test(this.resourcePath);\n\n  const transformFile = new TransformFile(this.resourcePath, source, aotPlugin, !isGenerated, sourceFile);\n\n  const { angularCompilerOptions } = aotPlugin.tsConfig;\n\n  const basePath = normalize(angularCompilerOptions.basePath);\n  const genDir = normalize(angularCompilerOptions.genDir);\n\n  if (source.match(/bootstrapModule/ig)) {\n    const dirName = normalize(dirname(this.resourcePath));\n    const genRelativeToBase = relative(basePath, genDir);\n    const fileRelativeToBase = relative(basePath, dirName);\n    const genRelativeToFile = relative(fileRelativeToBase, genRelativeToBase);\n\n    const entryModule = aotPlugin.entryModule;\n    const genToEntryFile = join(genRelativeToFile, entryModule.path + '.ngfactory');\n    const fileToEntryFile = join(fileRelativeToBase, entryModule.path);\n    const normalPath = './' + fileToEntryFile.replace(/\\\\/g, '/');\n    const factoryPath = './' + genToEntryFile.replace(/\\\\/g, '/');\n\n    transformFile.convertBootstrap(entryModule.module);\n    transformFile.convertImport(\n      { name: 'platformBrowserDynamic', module: '@angular/platform-browser-dynamic' },\n      { name: 'platformBrowser', module: '@angular/platform-browser' }\n    );\n    transformFile.convertImport(\n      { name: entryModule.module, module: normalPath },\n      { name: `${entryModule.module}NgFactory`, module: factoryPath }\n    );\n  }\n\n  if (/\\.ngfactory(\\.|$)/.test(this.resourcePath) && /loadChildren/.test(source)) {\n    transformFile.convertLoadChildren(basePath, genDir);\n  }\n\n  if (!/\\.ngfactory(\\.|$)/.test(this.resourcePath)) {\n    transformFile.removeDecorators();\n  }\n\n  if (/templateUrl/.test(source) || /styleUrls/.test(source)) {\n    const resources = transformFile\n      .getResources()\n      .map((resource) => resolve(dirname(this.resourcePath), resource));\n\n    for (let i = 0; i < resources.length; i++) {\n      this.addDependency(resources[i]);\n    }\n\n    aotPlugin.registerResources(this.resourcePath, resources);\n  }\n\n  let transpiledModule = transformFile.transpile();\n\n  let sourceMap = transpiledModule.sourceMap;\n  const compiledSource = transpiledModule.outputText.replace(/__TROPMI__/g, 'import');\n\n  callback(null, compiledSource, sourceMap);\n}\n"]}