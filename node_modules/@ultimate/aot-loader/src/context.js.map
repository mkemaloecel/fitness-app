{"version":3,"file":"context.js","sourceRoot":"","sources":["../../src/context.ts"],"names":[],"mappings":"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","sourcesContent":["import { ModuleResolutionHostAdapter } from '@angular/compiler-cli';\nimport { extname } from 'path';\nimport { ModuleResolutionHost } from 'typescript';\nimport { Context, createContext, Script } from 'vm';\n\nconst SingleEntryPlugin = require('webpack/lib/SingleEntryPlugin');\n\nexport class AotContext extends ModuleResolutionHostAdapter {\n  childCompilers: {[x: string]: any} = {};\n  compiler: any;\n  compilation: any;\n  context: Context = createContext(Object.assign({require}, global));\n  resourceExtensions: string[] = [];\n  compiling = false;\n\n  constructor(host: ModuleResolutionHost) {\n    super(host);\n  }\n\n  compileResource(fileName: string) {\n    if (!this.childCompilers[fileName]) {\n      this.childCompilers[fileName] = this.compilation.createChildCompiler(fileName, { filename: fileName });\n      this.childCompilers[fileName].context = this.compiler.context;\n      this.childCompilers[fileName].apply(new SingleEntryPlugin(this.childCompilers[fileName].context, fileName, fileName));\n    }\n\n    let existsInParent = this.compilation.assets[fileName];\n    let childCompiler = this.childCompilers[fileName];\n\n    childCompiler.plugin('compilation', function (compilation: any) {\n      if (compilation.cache) {\n        if (!compilation.cache[fileName]) {\n          compilation.cache[fileName] = {};\n        }\n        compilation.cache = compilation.cache[fileName];\n      }\n    });\n\n    this.compiling = true;\n\n    return new Promise<any>((resolve) => {\n      childCompiler.runAsChild((err: any, entries: any[], childCompilation: any) => {\n        if (err) {\n          childCompilation.errors.push(err);\n          return resolve();\n        }\n        if (!existsInParent) {\n          delete this.compilation.assets[fileName];\n        }\n        this.compiling = false;\n        resolve(childCompilation.assets[fileName].source());\n      });\n    });\n  }\n\n  async readResource(fileName: string) {\n    const fileExtension = extname(fileName);\n    if (!this.resourceExtensions.includes(fileExtension)) {\n      this.resourceExtensions.push(fileExtension);\n    }\n\n    const source = await this.compileResource(fileName);\n\n    try {\n      const script = new Script(source, {filename: fileName});\n      const result = script.runInContext(this.context);\n\n      if (typeof result !== 'string') {\n        const err = 'templateUrl and styleUrls need to be loaded as a string when using AoT compilation';\n        throw new Error(`${err}\\nAsset ${fileName} exported '${typeof result}' (try using raw-loader as the last loader)`);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n"]}