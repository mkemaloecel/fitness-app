{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../src/compiler.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,YAAY,EAAuB,MAAM,uBAAuB,CAAC;AAU1E;IAAqC,mCAAY;IAC/C,yBACY,OAAgB,EAChB,OAA+B,EAC/B,OAA4B,EAC5B,eAAwC;QAJpD,YAME,kBAAM,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,SACjC;QANW,aAAO,GAAP,OAAO,CAAS;QAChB,aAAO,GAAP,OAAO,CAAwB;QAC/B,aAAO,GAAP,OAAO,CAAqB;QAC5B,qBAAe,GAAf,eAAe,CAAyB;;IAGpD,CAAC;IAED,uCAAa,GAAb,UAAc,QAAgB;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC5C,CAAC;QACD,MAAM,CAAC,iBAAM,aAAa,YAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IACH,sBAAC;AAAD,CAAC,AAhBD,CAAqC,YAAY,GAgBhD","sourcesContent":["import { CompilerHost, CompilerHostContext } from '@angular/compiler-cli';\nimport { CompilerOptions, Program, SourceFile } from 'typescript';\n\nexport interface AngularCompilerOptions extends CompilerOptions {\n  basePath?: string,\n  genDir?: string,\n  entryModule?: string,\n  debug?: boolean\n}\n\nexport class AotCompilerHost extends CompilerHost {\n  constructor(\n    protected program: Program,\n    protected options: AngularCompilerOptions,\n    protected context: CompilerHostContext,\n    protected sourceFileCache: Map<string, SourceFile>\n  ) {\n    super(program, options, context);\n  }\n\n  getSourceFile(fileName: string): SourceFile {\n    if (this.sourceFileCache.has(fileName)) {\n      return this.sourceFileCache.get(fileName);\n    }\n    return super.getSourceFile(fileName);\n  }\n}\n"]}